name: Dernek ERP CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 0 * * 0'  # Haftalık security scan

permissions:
  contents: write  # Auto-commit için write izni
  packages: write
  id-token: write

jobs:
  # AŞAMA 1: KOD KALİTESİ KONTROLÜ
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - name: Kodu Klonla
        uses: actions/checkout@v4.1.7

      - name: Python Ortamını Kur
        uses: actions/setup-python@v5.2.0
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Bağımlılıkları Kur
        run: pip install -r requirements.txt

      - name: Black ile Otomatik Formatlama
        run: |
          pip install black
          black .

      - name: Flake8 ile Kod Stili Kontrolü (Opsiyonel)
        run: |
          pip install flake8
          flake8 . --max-line-length=88 --extend-ignore=E203
        continue-on-error: true

      - name: Format Değişikliklerini Commit Et
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git add .
          git commit -m "Auto-format with Black" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # AŞAMA 2: SECURITY SCAN
  security-scan:
    runs-on: ubuntu-latest
    needs: code-quality
    if: github.event_name == 'schedule' || github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4.1.7

      - name: Python Ortamını Kur
        uses: actions/setup-python@v5.2.0
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Dependency Scan (Safety)
        run: |
          pip install safety
          safety check -r requirements.txt --full-report
        continue-on-error: true

  # AŞAMA 3: DOCKER BUILD VE PUSH
  build-and-push-docker:
    needs: [code-quality, security-scan]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4.1.7

      - name: Docker Login (GHCR)
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Buildx Kur
        uses: docker/setup-buildx-action@v3.11.0
        with:
          driver: docker-container  # Cache export için uygun driver
          install: true

      - name: Metadata Oluştur
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=sha

      - name: Docker Build ve Push 
        uses: docker/build-push-action@v6.7.0
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max